LOAD M(64)        //ACC <- m1_rows_len            i LOOP
SUB M(59)         //ACC <- m1_rows_len - i
SUB M(63)         //ACC <- m1_rows_len - i - 1
JUMP + M(5)       //if i >= m1_rows_len: EXIT
EXIT              //EXIT program
LOAD M(62)        //ACC <- 0
STOR M(60)        //j <- 0
LOAD M(67)        //ACC <- m2_cols_len           j LOOP
SUB M(60)         //ACC <- m2_cols_len - j
SUB M(63)         //ACC <- m2_cols_len - j - 1
JUMP + M(12)      //if j >= m2_cols_len: EXIT
JUMP M(51)         //EXIT j LOOP
LOAD M(62)        //ACC <- 0
STOR M(61)        //k <- 0
LOAD M(66)        //ACC <- m2_rows_len            k LOOP
SUB M(61)         //ACC <- m2_rows_len - k
SUB M(63)         //ACC <- m2_rows_len - k - 1
JUMP + M(19)      //if k >= m2_rows_len: EXIT
JUMP M(47)         //EXIT k LOOP
LOAD MQ,M(64)     //MQ <- m1_rows_len
MUL M(59)         //MQ <- MQ * i
LOAD MQ           //ACC <- MQ
ADD M(61)         //ACC <- [i][k]
ADD M(56)         //ACC <- &m1[i][k]
STOR OP(38)       //OP(38) <- &m1[i][k]
LOAD MQ,M(64)     //MQ <- m1_rows_len
MUL M(61)         //MQ <- MQ * k
LOAD MQ           //ACC <- MQ
ADD M(60)         //ACC <- [k][j]
ADD M(57)         //ACC <- &m2[k][j]
STOR OP(39)       //OP(39) <- &m2[k][j]
LOAD MQ,M(66)     //MQ <- m2_rows_len
MUL M(59)         //MQ <- MQ * i
LOAD MQ           //ACC <- MQ
ADD M(60)         //ACC <- [i][j]
ADD M(58)         //ACC <- &mr[i][j]
STOR OP(41)       //OP(39) <- &mr[i][j]
STOR OP(42)       //OP(40) <- &mr[i][j]
LOAD MQ,M(0)      //MQ <- m1[i][k]
MUL M(0)          //MQ <- m1[i][k] * m2[k][j]
LOAD MQ           //ACC <- MQ
ADD M(0)          //ACC <- mr[i][j] + m1[i][k] * m2[k][j]
STOR M(0)         //mr[i][j] <- mr[i][j] + m1[i][k] * m2[k][j]
LOAD M(61)        //ACC <- k
ADD M(63)         //ACC <- k + 1
STOR M(61)        //k <- k + 1
JUMP M(14)        //go to start of k loop
LOAD M(60)        //ACC <- j
ADD M(63)         //ACC <- j + 1
STOR M(60)        //j <- j + 1
JUMP M(7)         //go to start of j loop
LOAD M(59)        //ACC <- i
ADD M(63)         //ACC <- i + 1
STOR M(59)        //i <- i + 1
JUMP M(0)         //go to start of i loop
EXIT
68    //m1_ptr
77    //m2_ptr
86    //mr_ptr
0     //i
0     //j
0     //k
0     //CONSTANT 0
1     //CONSTANT 1
3     //m1_rows_len
3     //m1_cols_len
3     //m2_rows_len
3     //m2_cols_len
1     //m1 start
2
3
4
5
6
7
8
9     //m1 end
1     //m2 start
2
3
4
5
6
7
8
9     //m2 end
0     //mr start
0
0
0     //mr end
0
0
0
0
0
